// <auto-generated />
using System;
using GFood_CaseStudy.DataAccess.Concrete.EntityFramework.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GFood_CaseStudy.DataAccess.Migrations
{
    [DbContext(typeof(GFoodContext))]
    [Migration("20220726185152_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GFood_CaseStudy.Entities.Models.Basket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id")
                        .HasName("PK_Baskets");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_Baskets_CreatedAt");

                    b.HasIndex("UpdatedAt")
                        .HasDatabaseName("IX_Baskets_UpdatedAt");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("GFood_CaseStudy.Entities.Models.BasketProduct", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BasketId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ProductId", "BasketId")
                        .HasName("PK_BasketProducts");

                    b.HasIndex("BasketId");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_BasketProducts_CreatedAt");

                    b.HasIndex("UpdatedAt")
                        .HasDatabaseName("IX_BasketProducts_UpdatedAt");

                    b.ToTable("BasketProducts");
                });

            modelBuilder.Entity("GFood_CaseStudy.Entities.Models.Campaign", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id")
                        .HasName("PK_Campaigns");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_Campaigns_CreatedAt");

                    b.HasIndex("UpdatedAt")
                        .HasDatabaseName("IX_Campaigns_UpdatedAt");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("GFood_CaseStudy.Entities.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id")
                        .HasName("PK_Products");

                    b.HasIndex("Code")
                        .HasDatabaseName("IX_Products_Code");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_Products_CreatedAt");

                    b.HasIndex("UpdatedAt")
                        .HasDatabaseName("IX_Products_UpdatedAt");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("GFood_CaseStudy.Entities.Models.BasketProduct", b =>
                {
                    b.HasOne("GFood_CaseStudy.Entities.Models.Basket", "Basket")
                        .WithMany("BasketProducts")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GFood_CaseStudy.Entities.Models.Product", "Product")
                        .WithMany("BasketProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GFood_CaseStudy.Entities.Models.Basket", b =>
                {
                    b.Navigation("BasketProducts");
                });

            modelBuilder.Entity("GFood_CaseStudy.Entities.Models.Product", b =>
                {
                    b.Navigation("BasketProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
